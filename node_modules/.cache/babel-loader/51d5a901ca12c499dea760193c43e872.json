{"ast":null,"code":"var _jsxFileName = \"/Users/mitishah/Documents/rickandmorty/src/Components/Cards/Cards.js\";\nimport React from \"react\";\nimport styles from \"./Cards.modules.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cards = _ref => {\n  let {\n    results\n  } = _ref;\n  let display;\n\n  if (results) {\n    display = results.map(x => {\n      let {\n        id,\n        name,\n        image,\n        location,\n        status\n      } = x;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4 mb-4 position-relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.cards} cards`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"\",\n            className: `${styles.img} img img-fluid`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"10px\"\n            },\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fs-4 fw-bold mb-4\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fs-6\",\n                children: \"Last Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fs-5\",\n                children: location.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), (() => {\n          if (status === \"Dead\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.badge} position-absolute badge bg-danger`,\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this);\n          } else if (status === \"Alive\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.badge} position-absolute badge bg-success`,\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.badge} position-absolute badge bg-secondary`,\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this);\n          }\n        })()]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this);\n    });\n  } else {\n    display = \"No characters found\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: display\n  }, void 0, false); //<---Empty tags\n};\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","styles","Cards","results","display","map","x","id","name","image","location","status","cards","img","padding","badge"],"sources":["/Users/mitishah/Documents/rickandmorty/src/Components/Cards/Cards.js"],"sourcesContent":["import React from \"react\";\nimport styles from \"./Cards.modules.scss\";\n\nconst Cards = ({ results }) => {\n  let display;\n  if (results) {\n    display = results.map((x) => {\n      let { id, name, image, location, status } = x;\n      return (\n        <div key={id} className=\"col-4 mb-4 position-relative\">\n          <div className={`${styles.cards} cards`}>\n            <img src={image} alt=\"\" className={`${styles.img} img img-fluid`} />\n            <div style={{ padding: \"10px\" }} className=\"content\">\n              {/* fs-4 ..... font size 4 */}\n              <div className=\"fs-4 fw-bold mb-4\">{name}</div>\n              <div className=\"\">\n                <div className=\"fs-6\">Last Location</div>\n                <div className=\"fs-5\">{location.name}</div>\n              </div>\n            </div>\n          </div>\n\n          {/* IIFE function */}\n          {(() => {\n            if (status === \"Dead\") {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-danger`}\n                >\n                  {status}\n                </div>\n              );\n            } else if (status === \"Alive\") {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-success`}\n                >\n                  {status}\n                </div>\n              );\n            } else {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-secondary`}\n                >\n                  {status}\n                </div>\n              );\n            }\n          })()}\n        </div>\n      );\n    });\n  } else {\n    display = \"No characters found\";\n  }\n  return <>{display}</>; //<---Empty tags\n};\n\nexport default Cards;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;;AAEA,MAAMC,KAAK,GAAG,QAAiB;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAC7B,IAAIC,OAAJ;;EACA,IAAID,OAAJ,EAAa;IACXC,OAAO,GAAGD,OAAO,CAACE,GAAR,CAAaC,CAAD,IAAO;MAC3B,IAAI;QAAEC,EAAF;QAAMC,IAAN;QAAYC,KAAZ;QAAmBC,QAAnB;QAA6BC;MAA7B,IAAwCL,CAA5C;MACA,oBACE;QAAc,SAAS,EAAC,8BAAxB;QAAA,wBACE;UAAK,SAAS,EAAG,GAAEL,MAAM,CAACW,KAAM,QAAhC;UAAA,wBACE;YAAK,GAAG,EAAEH,KAAV;YAAiB,GAAG,EAAC,EAArB;YAAwB,SAAS,EAAG,GAAER,MAAM,CAACY,GAAI;UAAjD;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAK,KAAK,EAAE;cAAEC,OAAO,EAAE;YAAX,CAAZ;YAAiC,SAAS,EAAC,SAA3C;YAAA,wBAEE;cAAK,SAAS,EAAC,mBAAf;cAAA,UAAoCN;YAApC;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE;cAAK,SAAS,EAAC,EAAf;cAAA,wBACE;gBAAK,SAAS,EAAC,MAAf;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAK,SAAS,EAAC,MAAf;gBAAA,UAAuBE,QAAQ,CAACF;cAAhC;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA;cAAA;cAAA;cAAA;YAAA,QAHF;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAcG,CAAC,MAAM;UACN,IAAIG,MAAM,KAAK,MAAf,EAAuB;YACrB,oBACE;cACE,SAAS,EAAG,GAAEV,MAAM,CAACc,KAAM,oCAD7B;cAAA,UAGGJ;YAHH;cAAA;cAAA;cAAA;YAAA,QADF;UAOD,CARD,MAQO,IAAIA,MAAM,KAAK,OAAf,EAAwB;YAC7B,oBACE;cACE,SAAS,EAAG,GAAEV,MAAM,CAACc,KAAM,qCAD7B;cAAA,UAGGJ;YAHH;cAAA;cAAA;cAAA;YAAA,QADF;UAOD,CARM,MAQA;YACL,oBACE;cACE,SAAS,EAAG,GAAEV,MAAM,CAACc,KAAM,uCAD7B;cAAA,UAGGJ;YAHH;cAAA;cAAA;cAAA;YAAA,QADF;UAOD;QACF,CA1BA,GAdH;MAAA,GAAUJ,EAAV;QAAA;QAAA;QAAA;MAAA,QADF;IA4CD,CA9CS,CAAV;EA+CD,CAhDD,MAgDO;IACLH,OAAO,GAAG,qBAAV;EACD;;EACD,oBAAO;IAAA,UAAGA;EAAH,iBAAP,CArD6B,CAqDN;AACxB,CAtDD;;KAAMF,K;AAwDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}